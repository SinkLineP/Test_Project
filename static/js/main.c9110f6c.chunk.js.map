{"version":3,"sources":["components/Scrollslider/Scrollslider.js","components/OpinionPoll/OpinionPoll.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["Scrollslider","props","ref","useRef","useState","isScrolling","clientX","scrollX","state","setState","onMouseMove","e","current","contains","target","preventDefault","scrollLeft","sX","cX","onMouseUp","style","cursor","onMouseDown","useEffect","document","addEventListener","removeEventListener","className","_class","children","OpinionPoll","handleOnChange","item","element","id","firstName","lastName","dob","active","value","selectedOption","console","log","updateData","onChangeUsers","text","map","choice","index","type","name","itemId","checked","onChange","Component","connect","storeUsers","users","dispatch","onAddUsers","addUsers","payload","changeUsers","Filter","filterUsers","allUsers","groups","Object","fromEntries","Array","from","group","normalize","replace","toUpperCase","push","entries","prevState","el","createDate","date","dateBirthday","Date","Intl","DateTimeFormat","month","day","year","format","filterBirthdayUsers","a","localStorage","length","axios","get","then","response","data","split","getLocal","JSON","parse","getItem","this","arrayMonths","color","inputName","sort","b","userItem","marginLeft","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initalState","updateRecord","changeActive","changeSelectedOption","newUsers","rec","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","location","reload","localItem","jsonUsers","stringify","setItem","useLocalState","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9110f6c.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst Scrollslider = (props) => {\n  let ref = useRef();\n\n  const [state, setState] = useState({\n    isScrolling: false,\n    clientX: 0,\n    scrollX: 0,\n  });\n\n  const onMouseMove = (e) => {\n    if (ref && ref.current && !ref.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n\n    const { clientX, scrollX, isScrolling } = state;\n\n    if (isScrolling) {\n      ref.current.scrollLeft = scrollX - e.clientX + clientX;\n      let sX = scrollX - e.clientX + clientX;\n      let cX = e.clientX;\n      setState({\n        ...state,\n        scrollX: sX,\n        clientX: cX,\n      });\n    }\n  };\n\n  const onMouseUp = (e) => {\n    if (ref && ref.current && !ref.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    ref.current.style.cursor = 'default';\n    setState({\n      ...state,\n      isScrolling: false,\n    });\n  };\n\n  const onMouseDown = (e) => {\n    if (ref && ref.current && !ref.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    // console.log(ref.current);\n    // ref.current.class.remove = 'cursor-hover';\n    ref.current.style.cursor = 'grabbing';\n    setState({\n      ...state,\n      isScrolling: true,\n      clientX: e.clientX,\n    });\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mouseup', onMouseUp);\n    document.addEventListener('mousemove', onMouseMove);\n\n    return () => {\n      document.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('mousemove', onMouseMove);\n    };\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={props._class}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onMouseMove={onMouseMove}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scrollslider;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass OpinionPoll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.selectedOption,\n    };\n  }\n\n  handleOnChange = (e) => {\n    const { id, firstName, lastName, dob } = this.props.item;\n    let element = {\n      id: id,\n      firstName: firstName,\n      lastName: lastName,\n      dob: dob,\n      active: e.target.value,\n      selectedOption: e.target.value,\n    };\n    console.log(e.target.value);\n    this.setState({ selectedOption: e.target.value });\n    this.props.updateData(element);\n    this.props.onChangeUsers(element);\n  };\n\n  render() {\n    const json = {\n      choices: [\n        { text: 'not active', value: 'false' },\n        { text: 'active', value: 'true' },\n      ],\n    };\n    return (\n      <>\n        <div>\n          <div>\n            {json.choices.map((choice, index) => (\n              <label key={index}>\n                <input\n                  type='radio'\n                  name={this.props.itemId}\n                  value={choice.value}\n                  key={index}\n                  checked={this.state.selectedOption === choice.value}\n                  onChange={(e) => this.handleOnChange(e)}\n                />\n                {choice.text}\n                <br />\n              </label>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    storeUsers: state.users,\n  }),\n  (dispatch) => ({\n    onAddUsers: (addUsers) => {\n      dispatch({\n        type: 'ADD_USERS',\n        payload: addUsers,\n      });\n    },\n    onChangeUsers: (changeUsers) => {\n      dispatch({\n        type: 'UPDATE_USERS',\n        payload: changeUsers,\n      });\n    },\n  })\n)(OpinionPoll);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Scrollslider from '../Scrollslider/Scrollslider';\nimport axios from 'axios';\nimport './Filter.scss';\nimport OpinionPoll from '../OpinionPoll/OpinionPoll';\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterUsers: [],\n      filterBirthdayUsers: [],\n    };\n  }\n\n  async componentDidMount() {\n    const baseUrl =\n      'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n\n    if (localStorage.length == 0) {\n      await axios.get(baseUrl).then((response) => {\n        response.data.map((item) => {\n          const { id, firstName, lastName, dob } = item;\n          const monthUser = this.createDate(dob).split(' ')[0];\n          const el = {\n            id: id,\n            firstName: firstName,\n            lastName: lastName,\n            dob: dob,\n            active: 'false',\n            month: monthUser,\n            selectedOption: 'false',\n          };\n          this.props.onAddUsers(el);\n        });\n        this.filterUsers(this.props.storeUsers);\n      });\n    } else {\n      const getLocal = JSON.parse(localStorage.getItem('redux-users'));\n      getLocal.users.map((item) => {\n        const { id, firstName, lastName, dob, active, selectedOption } = item;\n        const monthUser = this.createDate(dob).split(' ')[0];\n        const el = {\n          id: id,\n          firstName: firstName,\n          lastName: lastName,\n          dob: dob,\n          active: active,\n          month: monthUser,\n          selectedOption: selectedOption,\n        };\n        this.props.onAddUsers(el);\n      });\n      this.filterUsers(getLocal.users);\n    }\n  }\n\n  filterUsers = (allUsers) => {\n    let groups = Object.fromEntries(\n      Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ', (group) => [\n        group,\n        { children: [], group },\n      ])\n    );\n\n    for (let e of allUsers) {\n      let letter = e.firstName[0]\n        .normalize('NFD')\n        .replace(/[^a-z]/gi)\n        .toUpperCase();\n      groups[letter].children.push(e);\n    }\n\n    groups = Object.entries(groups);\n    this.setState({\n      filterUsers: groups,\n    });\n  };\n\n  updateData = (value) => {\n    this.setState((prevState) => ({\n      filterUsers: prevState.filterUsers.map((element) => {\n        return [\n          element[0],\n          {\n            children: element[1].children.map((el) => {\n              if (el.id === value.id) {\n                return { ...el, active: value.active };\n              }\n              return el;\n            }),\n          },\n        ];\n      }),\n    }));\n  };\n\n  createDate = (date) => {\n    let dateBirthday = new Date(date);\n\n    let formatter = new Intl.DateTimeFormat('en', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric',\n    });\n    return formatter.format(dateBirthday);\n  };\n\n  render() {\n    let arrayMonths = ['Employees List is empty'];\n    this.props.storeUsers.map((item) => {\n      if (item.active == 'true') {\n        arrayMonths = [\n          'November',\n          'December',\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n        ];\n      }\n    });\n    return (\n      <>\n        <div className='two-blocks'>\n          <div className='employees'>\n            <div className='employees-title'>\n              <h1>Employees</h1>\n            </div>\n            <div className='employees-container'>\n              <Scrollslider _class='items'>\n                {this.state.filterUsers.map((e) => {\n                  return (\n                    <>\n                      <div className='item'>\n                        <b className='item-liter'>{e[0]}</b>\n                        {e[1].children.length == 0 ? (\n                          <p>No Employees</p>\n                        ) : (\n                          <div>\n                            {e[1].children.map((item) => {\n                              if (item.active == 'true') {\n                                return (\n                                  <>\n                                    <p style={{ color: 'blue' }}>\n                                      {item.firstName + ' ' + item.lastName}\n                                    </p>\n                                    <OpinionPoll\n                                      inputName={item.id}\n                                      item={item}\n                                      updateData={this.updateData}\n                                      selectedOption={item.selectedOption}\n                                    />\n                                  </>\n                                );\n                              } else {\n                                return (\n                                  <>\n                                    <p>\n                                      {item.firstName + ' ' + item.lastName}\n                                    </p>\n                                    <OpinionPoll\n                                      inputName={item.id}\n                                      item={item}\n                                      updateData={this.updateData}\n                                      selectedOption={item.selectedOption}\n                                    />\n                                  </>\n                                );\n                              }\n                            })}\n                          </div>\n                        )}\n                      </div>\n                    </>\n                  );\n                })}\n              </Scrollslider>\n            </div>\n          </div>\n          <div className='employees-birthday'>\n            <div className='employees-birthday-title'>\n              <h1>Employees Birthday</h1>\n            </div>\n            <div className='employees-birthday-container'>\n              <table>\n                <tbody>\n                  <tr>\n                    <ul>\n                      {arrayMonths.map((month) => {\n                        return (\n                          <>\n                            <tr>\n                              <td>\n                                <b>{month}</b>\n                                <br />\n                                {this.props.storeUsers\n                                  .sort((a, b) =>\n                                    a.lastName > b.lastName ? 1 : -1\n                                  )\n                                  .map((userItem) => {\n                                    if (\n                                      month == userItem.month &&\n                                      userItem.active == 'true'\n                                    ) {\n                                      return (\n                                        <li style={{ marginLeft: 30 }}>\n                                          <i>\n                                            {userItem.firstName +\n                                              ' ' +\n                                              userItem.lastName +\n                                              ' - ' +\n                                              this.createDate(userItem.dob) +\n                                              ' year'}\n                                          </i>\n                                        </li>\n                                      );\n                                    }\n                                  })}\n                              </td>\n                            </tr>\n                          </>\n                        );\n                      })}\n                    </ul>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    storeUsers: state.users,\n  }),\n  (dispatch) => ({\n    onAddUsers: (addUsers) => {\n      dispatch({ type: 'ADD_USERS', payload: addUsers });\n    },\n  })\n)(Filter);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Filter from './components/Filter/Filter.js';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Filter />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst initalState = {\n  users: [],\n};\n\nfunction updateRecord(state, itemId, changeActive, changeSelectedOption) {\n  const newUsers = state.users.map((rec) => {\n    if (rec.id === itemId) {\n      return {\n        ...rec,\n        active: changeActive,\n        selectedOption: changeSelectedOption,\n      };\n    }\n    return rec;\n  });\n  return { ...state, users: newUsers };\n}\n\nfunction employees(state = initalState, action) {\n  switch (action.type) {\n    case 'ADD_USERS':\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n    case 'UPDATE_USERS':\n      return updateRecord(\n        state,\n        action.payload.id,\n        action.payload.active,\n        action.payload.selectedOption\n      );\n\n    default:\n      return state;\n  }\n}\n\nfunction useLocalState(localItem) {\n  const jsonUsers = JSON.stringify(localItem);\n  localStorage.setItem('redux-users', jsonUsers);\n}\n\nconst store = createStore(\n  employees,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => {\n  if (window.location.reload) {\n    return !useLocalState(store.getState());\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}